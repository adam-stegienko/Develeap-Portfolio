version: '3.7'

services:
  reverse_nginx:
    container_name: reverse_nginx
    hostname: reverse_nginx
    image: nginx:1.23-alpine
    networks:
      - reverse
    ports:
      - "80:80"
    volumes:
      - ./reverse_proxy/conf/nginx.conf:/etc/nginx/nginx.conf
    restart: always

  digital_planner:
    image: digital_planner:latest
    container_name: digital_planner
    restart: always
    env_file:
      - ./.env
    networks:
    - db_network
    - reverse
    depends_on:
      mssql_server:
        condition: service_healthy

  mssql_server:
    image: mcr.microsoft.com/mssql/server:${DB_VERSION}
    container_name: ${MSSQL_SERVER}
    restart: always
    env_file:
      - ./.env
    volumes:
     - ./mssql/initdb.sql:/init/initdb.sql
     - ./mssql/entrypoint.sh:/init/entrypoint.sh
     - ./mssql/initdb.sh:/init/initdb.sh
     - data:${DATA_VOUME}
    networks:
     - db_network
    entrypoint:
     - /init/entrypoint.sh
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -U SA -P $MSSQL_SA_PASSWORD -S localhost -i /init/initdb.sql
      interval: 2s
      retries: 10
      start_period: 3s
      timeout: 3s


volumes:
  data:
    name: data

networks:
  db_network:
    driver: bridge
  reverse:
    driver: bridge
